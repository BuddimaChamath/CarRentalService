<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/9sAQwAFAwQEBAMF
        BAQEBQUFBgcMCAcHBwcPCwsJDBEPEhIRDxERExYcFxMUGhURERghGBodHR8fHxMXIiQiHiQcHh8e/9sA
        QwEFBQUHBgcOCAgOHhQRFB4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
        Hh4eHh4e/8AAEQgBaAHCAwERAAIRAQMRAf/EABwAAQADAQEBAQEAAAAAAAAAAAABAgMEBgUHCP/EAEgQ
        AAEDAgMFBAcDCAgGAwAAAAABAhEDYQQFEgYTITFRFUFxoQcUIjJSYpEWgbEjM0JTcpLB8BckVHOEstHS
        NENFY4KTosLh/8QAFgEBAQEAAAAAAAAAAAAAAAAAAAEC/8QAFxEBAQEBAAAAAAAAAAAAAAAAABEBIf/a
        AAwDAQACEQMRAD8A/jSAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQ
        AgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAXROHIBFgEWARYBFgEWARYBFgEWARYBFgEWARYBF
        gEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBFgEWARYBF
        gEWARYBFgEWARYBFgEWARYBFgEWARYBFgEAXROHIBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAI
        AQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACALonACYsAiwCLAIsAi
        wCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAi
        wCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwFkTgBMAIAQAgBACAEAIAQAg
        BACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBAC
        AEAIAsicAJgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBAC
        AEAIAQAgBACAEAIAQAgBACAEAIAQAgBAF0TgAixQiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsA
        iwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwCLAIsA
        iwCLAIsAiwCLAIsAiwCLAIsAiwF0ThyIEFCAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACA
        EAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACAEAIAQAgBACALInAgmEKEIAhAEIAhAEIAhAEI
        AhAEIAhAEIAhAEIAhAEIAhAEIAhAEIAhAEIAjxAQA0gNIDSA0gNIDSA0gNICAEAIAQgCEAQgCEAQgCEA
        QgCEAQgCEAQgCEAQgCEAQgCEAQgCEAQgCEAQgFkTgBMAIAQAgBACAEAIAQAgBACAEAIAQAgBADSQTpQo
        QAhAJgBACAEAIAQA0gNICAEAIECAEAIAiAEANKAFaQRBQgBACAEAIAQAgBACAEAIAQAgBACAEAXROACA
        EAIAQAgBACAEAIAQAgBACAEAIAQAgCYAnSA0gTpIGlegE6V6ANKgNKgNC2AaPABo8AGjwAaPABoWwDSo
        DSoDSvQCNK9AGmwDSURpAjSBCoAgBACAEAIAQAgBACAEAIAQAgBACAEAWROBBMFCAEAIAQAgBACAEAIA
        QAgBACAIggmCiUaBZGgSjQJRgE6QGkCdIDQpBOhQGhegDRYBosgDRZAGiwDQvQBoXoBGhQGgBpKI0gFY
        BVWgRpAhWgVVoCCBBQgBACAEAIAQAgBACAEAIAQAgCyJw5EgmChACAEAIAQAgBACAEAIAQAgCFQAiEFk
        bYolEILI0oujbEFkYBKMAtoAaAGgCdFgGiwDRYCdFgGiwEaLANFgGiwDRYCNADQBCsAqrCiFaQUVpRVW
        gV0gRBBWCi0AIAQAgBACAEAIAQAgBACAEAWROAExYBFgEWARYBFgEWARYBFgEWARYBFgEWAhUsBCIQWg
        omALo2wFmt74A0RtgLtbYgujAJ0ANAE7sBuxRO7QUN2gondp0AbtOgEbtOgDdoKG7FEbsBoAjQBCsAq5
        liiitsBm5oFFbYCqpYgqqFEKgBEAmLAIsAiwCLAIsAiwCLAIsAiwCLAIsAiwFkThyIEFCAEAIAQAgBAC
        AEAIAQAgCFQAiAWRALIgF2tkg0a0o0a0DRrQNEYBZKYE7tAJ3YDdgTuwG7AndgN2BG7AbsBuwI3f8wBG
        7QCN2BC0wM3MAzc0DNzQM3N7wKKgFVQCqoBEATACAEAIAQAgBACAEAIAQAgCyJwAmAEAIAQAgBACAEAI
        AQAgAoEQBKIBZEAsiAaNaBq1oGrWgasaINWMINEpgTuyid2BO7Abv+YAnd/zADdgN2A3f8wBG7/mAG7A
        jdgN2BVaYFXMIMXtEGTmlGTmgZOaBm5oFVQCqoBVUAIBMAIAQAgBACAEAIAQAgBAFkS4EwVCAEAIAQAg
        BACAEAAIgBABGhVkQglEA0a2xRoxtiDVjQNWMsVG7GBWzGEGzaYgslOwFt2vQIbpegqp3VkFE7qyChur
        IKG6sgobqyCiN1ZBQ3S9BRG7XoEQtO3kBVadgrKowDB7LFGL2BGT2kVk5oGTm2KM3IQVVLAVVoCCoQAA
        mAEAIAQAgBACAEAIAsiATFgpFgEWARYBFgEWARYBAEL4ARFgJRpBKNsBOkolG2AsjbAXa2wRqxpNVsxo
        G7GAbMZYDopssBsxlgNkpcOQgslKwglKVvIQTul6KIJ3S9FEDdL0EDdL0EQ3S9FEVG6XooELSt5CCFpW
        EELSsIMnsAxeywHO9lgMHssBi9tgMHtAyc2xRRW2IKK2wEK2xRCtsBGkgiLFCALRYBFgEWARYBFgEWAR
        YBFgJROARaApACAEAIAQAgCFQCIAIhBZGgWRCiUaBZGkF0aSiyNKNGNKNqaEg6GNA3ptEHTTYB006ZB0
        MpgaJS8SiUpIKJ3KCiUo28iCdzZfoA3Nl+gEblOnkBC0bAQtJBRC0iij6fAgwqUwOaowo5qjAOeo0DCo
        ggwe2SjNWkFFaKKq0CitAjSUQqEFVQCIKEAWgBACAEAIAQAgCUQCYJUIFCBQgUIFCBQgURAoQBKIFXRA
        JRALo0gsjCjRrALowIu1igbMZAqt6bQOmm0DppskYOqnTA6adMDobSsQWSkoEpSAndFE7ocQ3QVC0vAg
        jdAN0oFVpWT6AYVKZRzVaYHLVYNHNUbxA5qjeYHO9sgYuYBRzAjNWBVFYBRWqBVWgVVAKqgFYCECiUTg
        KEChAoQKEChAoQBZEAmChACAEAIAQAgCsATBBZECrIgRdrQNGssBo1tgNGssFaNZYDRtMDRtOe4DZlOw
        HTTbYDrosA6qTOUIB10qfLgB1U6UxCAapQXp5ATuesCid2nxJ9UFFkozy4/eAWgqc08wKrTT4k+qARuk
        XkqL9BQWgvTyAzfSjuA5atOwHLVZC8gOSqxOgHJVZxA5qjJVeAGD6dgM3MsBm6nYDNzLAZubYDNzAjJz
        bFFFQCqoBVUIqIKiUQCYAQAgBACAEAWROHICYCkAIAQAgBAEQBEAIAs1CC7UAu1ANWoBqxoGzWgasYUb
        MpkGzKYGrKYG9OmB00mAej2W2fq5xVc+pi8Ll+BpL+XxuLqIylTsiqqanfKnkB69mA9EeXJGM2tx+aVE
        5pgqTlRfDQxU/wDkSi/2j9EeE4YfZfaDMFTvqu0Iv71Vv4AF9IexdCPUvRdRffE42mn4I8AnpWoUl/qf
        o42Xop3LUxGpfKiBP9MeftX+rbNbHYdO78jVcqf5QM3+mXbZfzTNlqCfLltR341UAhnpl25T337MVU6O
        yp6fhWA0/pk2md+fyPY/EddWGqt/+ygS70tPqf8AF7AbJ4jrpquZ+NJQI/pI2WrLGN9FuXwvNcPjWfgr
        GgPtZ6K8UkYrYjOcEq81oVmvj92r/ACHp6HMf+bzfO8qcv8AaKNTSn3qxU8xR5/ajZfB4bDOzDZ3PcFn
        2XtSajqFRq1aKdXsRVXT83d3wUeOqsA5KlMDF9MDF1IDJ9MDF7AMXtgDJzQMXIBk5AM3IBVUKKQAgCUQ
        CYAQAgBACAEATAEwEIAQAgBACAEEEQUIAs1CCyIUaMTgQatQK2YgG7ECN2NCuimwDopsA3ZSA2ZRFHdg
        cJTelWviqu4weGprVxNWJ0MTp1cvJE71UDzGZ7RevYlKitbTo05bh6MylFvRL96rzVeJBzLnKrzqT94D
        tj5/MB2x8/mA7Y+fzAdsfP5gO2Pn8wHbHz+YDtj5/MB2x8/mA7Y+fzAdsfP5gEzlU5Pj7wLUs8fRxDMR
        RrOp16ayyo1Yc1bKB6uhUoZtlLc3wbWN9vdYui3lRq80VE7mOTinTincXBzPpCjB9IDF7AOeowDne0DB
        6Ac9RBRi9AMnIEZKhRVUIKwUIAlE4ECChACAEAIAQBaAJgBACAEAIAQBCoFRAQgCUIq7UAu3kBqwo2Zy
        A6KfIg6KYHbgqLq9dlJqsarl5vdpaniqgffp5BSREnPcnRem9d/tFF6+U0qFB1Rmb5ZXVqe5TqrqXwlE
        AwpUpVERJkDx/pX2qp4OnS2WwD0hipWxz2/pVI9lng1OPiqEH532u7qoDtd3VQHa7uqgO13dVAdru6qA
        7Xd1UB2u7qoDtd3VQHa7uqgO13dVAdru6qA7Xd1UB2u7qoDtd3VQPR+j7bNuS56iYtVdl2MbuMW3u0qv
        B/i1ePhIH6tiqDadRUa5Ht5tcnJydylEYTL6eKRyvx+CwulYRK9RUVfuRFAu/IaKrwz7KP8A2v8A9oo+
        Nm2BXBVUZ6xhsQ13J9Cpqb/qgHy6oHO+OIHO/mBg8ozUgyVOAFVArBUIAlCKmCoQAgBACAEASicOQVME
        QgBACAEAIAKnACIAQARCi6IBdqAasQg2YnADemgqummgR8/bDLcwx+TJ2fvFq0qqPVrFhzmwqLHXnME0
        eCdh8wYqtqYjEscnNHOVF8yDOpTzBqS3FV/31FH6fs/tZVzHLatSlg6qYjA4VauJmFRyonDTZYVS1X5D
        i69bF4qriq71fVqvV73L3qqyoGUL0AQvQAAAfQABML0X6ARC9F+gAAAAAAEAAP1bZXah+G2Kw2Lx1OtW
        p4aouGcrElyp+iqT04IB4jOMbmGb5vicej6tBtZ8tptevst5In0JUc+5xv8Aaq6r/eKKPVbB5Vm1PFVs
        dit+mH3SsZvVX21VU4oi9I5lwemqoqLBVc1RAMH8wjB6cAMnIUZqnECipxAQQIAlEAQAgBACAEAIAsic
        OZQgBACAEAIAQAgCIB0gHSAdWRAq7QNWEGzIA2pgfSy+gtR6cOAHpsvwPBOBB9VuVUazYrUKdVI/TYjv
        xA83tPhtlcNSfTTKcJjMTyRtJulGr8zm/wAOIHkNksbU2Zz1ce3Btr4aqm7xGHmNTJn2VXkqd0/fzA/V
        8JsX6MNocIzNcPlOFeytxVWtdTVHd6Oa1URFTvQCy+jT0cN/6LQ/ff8A7gL0/R96Oqfu5Hg1/aRzvxUD
        opbGbBUllmR5Yn+Gav4gdVPZvY6n+byvL2+GFp/6AbsyfZlnu4XCt8KDE/gBomXZAnKnRTwpNAn1HI+l
        P9xAOGrleSOqOWGcVX9BAKLlGRLzZTXxpoBR2R7PO97D4dfGi0DJ+zWyr/fwGCd44Zn+gHPU2N2Kqe/l
        GXu/wzQOepsDsE/3smwf3MVv4KBm30bbAPXhlFH95/8AuA6KXox9H1NFrPymgjWJqcr3v0oic1WXRAH5
        5t/mOWZklPI9ncEyhlGGfKPazTvnJyVE7mpKx3rzA22Ow+zjKLMPmmU0GVk4JiHor2u/aRfdXy8APdUs
        owLKaPwmGwzWL7rqTGwv3oBxY7ArCrAHm80wuhVVEKPj1QMHgYPAycBRUKiipxB0gHSAdSicAEAIAQAg
        BACALIiQBXUlgpqSwDUlgGpLANSWAaksA1JYCFck9wRGpLBTUlgLNchBdrkCNGPQK2Y9AN6bkVQPS5E1
        q6ZA9pgkw9DCrWrORrGpx6qvRCDgx9HNM1ZUWlTqtwjElzKSKqI3q9U/jwA+PUyb2eDeFgPm4zJuC+wB
        nlFXGZHinVMOrtzU/O0+51/FAPvvz1XNRzaiqi8gOOtnz28d4v1Ax+0T/wBYv1AfaJ/6xfqA+0T/ANYv
        1AfaJ/6xfqA+0T/1i/UB9oHfGA+0DvjAfaB3xgPtA74wH2gd8YG2Fzl9V3v8APu4HHPdHED4W1mbYjNE
        XLcK9UwiL+Vcn/NXp+ynmB8rB5Ny9gD6tHJlj3PID6eW5bmWDauJwaVW0UdD10qtNV6L3T5gfaZVoYvD
        OXSjKrPzjJmLpYDy+eMamqCjx+JVEqOS4HM96AYvcgGTnAUVyAU1IA1JYoaksQW1JYoaksA1JYBqSwDU
        lgGpLANSWAlHJAHLruQNdwGu4DXcBruA13Aa7gFeBXWUTrILI8C7X3A0a8DZjwN6dQD0eR4hE08SD6Od
        5qra+GwyO9lG7xU6qvBPwUD7ezO02Oy2s2vgMdXwtWI10qitVU6LHNLKB6+jtVgcySM+ybBY5y88RQT1
        bEeOpiaXL+01QLv2fyPNknJM3Y2s7lhMx00air0bUT8m771atgPL5/s3i8uxD8NjsHVw1ZqSrKjNKx1T
        ql04AeOzbAuozoVUA8pmGJq0XKjpgD5VTNHI73gK9qu+IB2q74gHarviAdqu+IB2q74gHarviAdqu+IB
        2q74gLMzNznI3VzA9LkuIV2niB6hlao+klCkqo56e0qdyAfUyrJnVHMYykr3OVEa1rZVV6IneB7WhsfS
        y1iVNocfQylIncOTe4lU/um+7/5q0C9TOtnMrSMpyRmJqpyxOZuSqvilJsMT79QHntptsc1zKklLGZhV
        qUWcWUUVGUmfssbDU+5APHYfOFp5xRVHcKjt266L/wDsAWzzEouriUeSxFSajvEDle8DJ7wMnPuBRXgU
        V4EayiUeQTruA13Aa7gNdwGu4DXcBrKLJU4cwOTeXAby4DeXAby4DeXAby4DeXAby4Fd5cCUfcgsjwLt
        fcDRjwNmPUDem+4H0suxK03oiqBjtJmGnMsOurnQT/MpBtgM2RET2gPuYPOeXtgegyzNdScXcFA95srn
        tPG7nIM4q77LMQ9KbFqcVwj3cG1Kar7sLEt5KkynJQPH7W5bVwmLxGFrs01aNR1Oo3o5qqi+aAfmm0WH
        jVwA8DmjnUaq8eBEcXrS/EpVPWl+JQHrS/EoD1pfiUB60vxKA9aX4lAetL8SgPWl+JQOnLqyvrpx5Ae7
        yBVhqge92fw+tzVXmoH6ZXx32UybCYfALuc0xuHTEYjEpwqUqT/cpMX9CWpqcqcV1IkwnEPDZnmiw5dX
        FVlVnmoHnMbnPP2gPiY7N0VF9sD5FDMdeb4RNXOs38QPsZrjNaqiLxUo+NUfcDB77gYueBk59wKK/jzA
        or7gRvLlEo+4E7y4DeXAby4DeXAby4DeXAby4Eo/gBya7kDXcBruA13Aa7gNdwGu4DXcCNYosjwLI/jz
        Au11wNWPuBsxwHRTcgHTTcB5rbPG1aeaUGostbQSPqpnU1w4XN1RURVVCD7OAzdXOaiP5lpXscozH2G+
        0VXpMHmSxwfF+gHqNrM9w20OMrZixi0atZGuqscqLNTQiPcllcir94H5ntHHtAfnG0Cp7REfCkUpIpSR
        SkilJUUpIKSKUkUr6GTKm++8Ur9C2dVPZKr9GyStQoUkfWdpbHdz+4Dp2z2lbnGfYvMKdNaFKq5EpUld
        K06bWo1jZs1qAeNzPMfZX2gPG5rmq06ipq4KQfBxecyqw6QjDK8xqvznBqnD8s3n4jB7is+VmZNK5ajk
        A53uAwe8DJ7rijNzwKq8CqvAlKnDmA13Aa7gNdwGu4DXcBruA13Asj+Ao5NZKGsUNYoaxQ1ihrFDWKGs
        UEeBKP4AXR4F2vgDVlQDZlQDdlTiB0U6twPL7ZO1ZnS/uU/FSamviERvgqy0a7XTwA9fleYQ1PaKr7+G
        zOET2iq7G5urW8HgfKzjM0qMWVA8LnVdKlSEUyj5oQAAAAAAAA6MBV3ddJ5KB7fJMwbTRqyXGnom5wrm
        ImvzKOevmcp7wHxsxzGUX2gPH5vilrVYRTLL54HTlKxmmFX/ALzfxLi495UqXKrmqVAMX1AMX1AMXVAM
        3PAqrwK6xQR4oaxQ1ihrFDWKGsUNYoaxRZKnDmKOTWA1gNYDWA1gNYDWA1gNYEpUAlKgGjagGjalwNW1
        U6gaNroneBomKjkoHwdo6m9xzHTyponmo0fNMsgHXg8W6kqIq8APrUMy4e8VWzs04e8KV87G5krkVEWS
        D5T3K9yucvFQiAAAAAAAAAADvwWPdShHKB9almns+8VairmfD3gPmYzHufKNUiPnKqqsrzAAbYB2nHUH
        dKjV8y4uPVrip7yqzdiEXvAzdVTqBk6pcDN1QDNagFd4BGsBrAawGsBrAawGsBrAawLI/gBx6wGsBrAa
        wGsBrAawGsBrAlHgSlQCUqgSlZbgTvl6gTv16gTv16gcOYv11mr8oHOZZAABFVOSgSrnLzVQIAAAAAAA
        AAAAAABKKqclUArlXmqgQAAAWoLFdi9HIaxrH1PWF6gRv7gRv16gN8twKrVAhagEbwCNYDWA1gNYDWA1
        gNYDWA1gXR/ADj1gNYDWA1gNYDWA1gNYDWA1gNYDWA1gNYDWA3igZ1V1OTwAqZZAAAAAAAAAAAAAAAAA
        AAAAAAAA3g9FuXFxtvFKpvAGsBrAawGsBrAawGsBrAawGsBrAawGsBrAsj+AHNK9QEr1ASvUBK9QEr1A
        SvUBK9QEr1ASvUBK9QEr1ASvUBK9QEr1ASvUBK9QIAlCIkiAAAAAAAAAAAAAAAAAAAAAAAqqlVMqAleo
        CV6gJXqAleoCV6gJXqAleoCV6gJXqAleoCV6gJXqAleoCV6gJUC6KsAZgAAAAAAAAAAAAAAAAAAAAmQE
        gJEISIQkkSEiEJEISIQkQhIhCRCEiEJEISIQkQhIhCSxYSIQkBIEAAAAAAAAAAAAAAAAAAAAAunICgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6cgKAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALpyAoAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAunICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6cgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAALpyAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAunICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        C6cgKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALpyAoAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAunID/9k=
</value>
  </data>
</root>